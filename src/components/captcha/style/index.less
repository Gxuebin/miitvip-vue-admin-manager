@import '../../../style/theme/index';

@mi-captcha: ~'@{mi-prefix}captcha';

.@{mi-captcha} {
    width: 100%;
    .properties(height, 42);
    font-family: @mi-font-family;

    &-content {
		width: 100%;
		height: 100%;
		position: relative;
    }
    
    &-radar {
        position: absolute;
		left: 0;
		top: 0;
		height: 100%;
		width: 100%;
		cursor: pointer;
		border-color: @mi-sider-color;
        background: @mi-white-color;
        .properties(min-width, 160);
        .border-radius(42);

        &-ready,
		&-scan,
		&-being,
		&-success {
			position: absolute;
			transition: all .5s ease;
			.properties(width, 30);
			.properties(height, 30);
			.properties(margin, 6);
        }

        &-being {
			.flex();
			
			.anticon {
				transform: rotateZ(90deg);
    			font-size: 20px;
			}
        }
        
        &-ring,
		&-dot {
			position: absolute;
			.border-radius-circle();
			transform: scale(.4);
			width: 100%;
			height: 100%;
			box-shadow: inset 0 0 0 1px @mi-theme-color;
			background-image: linear-gradient(115deg, rgba(0, 0, 0, 0) 50%, @mi-white-color 50%), linear-gradient(65deg, @mi-white-color 50%, rgba(0, 0, 0, 0) 50%);
        }
        
        &-dot {
			background: @mi-theme-color;
		}

		&-ring {
			animation: mi-anim-wait 1s infinite;
			transform: scale(1);
		}
		
		&-scan {
			.flex();

			.anticon {
				.properties(font-size, 22);
				.properties(width, 22);
				.properties(height, 22);
				color: @mi-theme-color;
				-o-animation: mi-captcha-ratote .8s linear infinite both;
				-moz-animation: mi-captcha-ratote .8s linear infinite both;
				animation: mi-captcha-ratote .8s linear infinite both;
			}
		}

        &-tip {
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			.properties(height, 42);
			.properties(padding-left, 48);
			.properties(padding-right, 48);
			.properties(font-size, @mi-font-size-normal);
			.properties(line-height, 42);
			color: @mi-sider-color;
			.text-ellipsis();
			text-align: left;
			box-sizing: border-box;

			&-error {
				color: @mi-error-color;
			}
		}
        
        &-logo {
			position: absolute;
			.properties(right, 12);
			.properties(top, 10);
			.properties(width, 20);
			.properties(height, 20);

			img {
				.border-radius-circle();
				filter: grayscale(1);
			}
		}
	}
	
	&-modal {
		position: absolute;
		display: block;
		.properties(margin-left, 16);
		animation-name: mi-captcha-modal-open;
		animation-fill-mode: forwards;
		animation-timing-function: cubic-bezier(0.6, 0, 0.4, 1);
		z-index: 202011232114;

		&-content {
			.properties(width, 286);
			position: absolute;
			left: 0;
			.properties(top, -157);
			.border-radius();
			background: @mi-sider-color;
			box-shadow: 0 0 10px @mi-sider-color;
			border: 1px solid @mi-theme-color;
		}

		&-wrap {
			position: relative;
			.properties(padding, 12);
		}

		&-embed {
			width: 100%;
			height: 0;
			position: relative;
			left: 0;
			top: 0;
			.properties(padding-bottom, 160);
			overflow: hidden;
		}

		&-loading,
		&-info {
			position: absolute;
		}

		&-loading {
			.properties(width, 260);
			.properties(height, 160);
			.flex();
			flex-direction: column;
			.border-radius();
			.properties(letter-spacing, 2);
			color: #999;
			background: #E5E5E5;
			.properties(font-size, @mi-font-size-normal);

			.ivu-icon {
				.properties(font-size, 30);
				.properties(margin-bottom, 4);
				color: #999;
			}
		}
	}
}

@keyframes mi-captcha-ratote {
	50%{
		-o-transform: rotate(180deg);
		-ms-transform: rotate(180deg);
		-moz-transform: rotate(180deg);
		-webkit-transform: rotate(180deg);
		transform: rotate(180deg);
	}
	100% {
		-o-transform: rotate(360deg);
		-ms-transform: rotate(360deg);
		-moz-transform: rotate(360deg);
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes mi-captcha-modal-open {
	0% {
		opacity: 0;
		-webkit-transform: scale3d(0, 0, 1);
		-moz-transform: scale3d(0, 0, 1);
		-o-transform: scale3d(0, 0, 1);
		-ms-transform: scale3d(0, 0, 1);
		transform: scale3d(0, 0, 1);
	}
	100% {
		opacity: 1;
		-webkit-transform: scale3d(1, 1, 1);
		-moz-transform: scale3d(1, 1, 1);
		-o-transform: scale3d(1, 1, 1);
		-ms-transform: scale3d(1, 1, 1);
		transform: scale3d(1, 1, 1);
	}
}